apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-{{ .Values.botfront.app.appName }}
  name: {{ .Release.Name }}-app-deployment
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.botfront.app.appName }}
  template:
    metadata:
      annotations:
        # Force rollout restart when configmap or secret change
        checksum/config: {{ include (print $.Template.BasePath "/botfront-secrets.yaml") . | sha256sum }}{{ include (print $.Template.BasePath "/botfront-app-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ .Release.Name }}-{{ .Values.botfront.app.appName }}
    spec:
      containers:
      - env:
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              key: MONGO_URL
              name: {{ .Release.Name }}-secrets
        {{- if .Values.botfront.smtpUri }}
        - name: MAIL_URL
          valueFrom:
            secretKeyRef:
              key: MAIL_URL
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if and .Values.mongodb.mongodbOplogUsername .Values.mongodb.mongodbOplogPassword }}
        - name: OPLOG_URL
          valueFrom:
            secretKeyRef:
              key: OPLOG_URL
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.botfront.app.graphQLKey }}
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              key: API_KEY
              name: {{ .Release.Name }}-secrets
        {{- end }}
        {{- if .Values.botfront.licenseKey }}
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: LICENSE_KEY
              name: {{ .Release.Name }}-secrets
        {{- end }}
        - name: PORT
          value: "3000"
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-app-config
            optional: false
        image: {{ .Values.botfront.app.image.name }}:{{ .Values.botfront.app.version }}
        {{- if .Values.botfront.app.imagePullPolicy }}
        imagePullPolicy: {{ .Values.botfront.app.imagePullPolicy }}
        {{- end }}
        name: {{ .Release.Name }}-app
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          {{- with .Values.botfront.app.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        volumeMounts:
        - mountPath: /app/models
          mountPropagation: None
          name: {{ .Release.Name }}-disk
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
            {{- if .Values.botfront.app.graphQLKey }}
            httpHeaders:
            - name: authorization
              value: {{ .Values.botfront.app.graphQLKey | quote }}
            {{- end }}
          initialDelaySeconds: {{ .Values.botfront.app.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.botfront.app.livenessProbe.periodSeconds }}
      restartPolicy: Always
      {{if .Values.botfront.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.botfront.imagePullSecret }}
      {{end }}
      volumes:
      - emptyDir: {}
        name: {{ .Release.Name }}-disk